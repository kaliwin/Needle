package main

import (
	"bufio"
	"encoding/hex"
	"fmt"
	"github.com/kaliwin/Needle/PublicStandard/HttpStructureStandard/http"
	"golang.org/x/net/html"
	"io"
	"strings"
)

func isLegalHTML(htmlContent string) (bool, error) {
	tokenizer := html.NewTokenizer(strings.NewReader(htmlContent))

	for {
		tt := tokenizer.Next()
		if tt == html.ErrorToken {
			// 检查是否有错误
			if tokenizer.Err() != io.EOF {
				return false, fmt.Errorf("HTML is not well-formed: %v", tokenizer.Err())
			}
			break
		}
	}
	return true, nil
}

type Hu struct {
	re *bufio.Reader
}

func (h Hu) Read(p []byte) (n int, err error) {
	return h.re.Read(p)
}

func (h Hu) Close() error {
	return nil
}

func main() {

	str := "485454502f312e312035303420476174657761792054696d652d6f75740d0a446174653a204672692c203139204a756c20323032342030383a31323a333220474d540d0a436f6e74656e742d547970653a20746578742f68746d6c0d0a436f6e74656e742d4c656e6774683a203536320d0a436f6e6e656374696f6e3a206b6565702d616c6976650d0a5365727665723a206e67696e780d0a0d0a3c68746d6c3e0d0a3c686561643e3c7469746c653e35303420476174657761792054696d652d6f75743c2f7469746c653e3c2f686561643e0d0a3c626f64793e0d0a3c63656e7465723e3c68313e35303420476174657761792054696d652d6f75743c2f68313e3c2f63656e7465723e0d0a3c68723e3c63656e7465723e6e67696e783c2f63656e7465723e0d0a3c2f626f64793e0d0a3c2f68746d6c3e0d0a3c212d2d20612070616464696e6720746f2064697361626c65204d53494520616e64204368726f6d6520667269656e646c79206572726f722070616765202d2d3e0d0a3c212d2d20612070616464696e6720746f2064697361626c65204d53494520616e64204368726f6d6520667269656e646c79206572726f722070616765202d2d3e0d0a3c212d2d20612070616464696e6720746f2064697361626c65204d53494520616e64204368726f6d6520667269656e646c79206572726f722070616765202d2d3e0d0a3c212d2d20612070616464696e6720746f2064697361626c65204d53494520616e64204368726f6d6520667269656e646c79206572726f722070616765202d2d3e0d0a3c212d2d20612070616464696e6720746f2064697361626c65204d53494520616e64204368726f6d6520667269656e646c79206572726f722070616765202d2d3e0d0a3c212d2d20612070616464696e6720746f2064697361626c65204d53494520616e64204368726f6d6520667269656e646c79206572726f722070616765202d2d3e0d0a"

	decodeString, err2 := hex.DecodeString(str)
	if err2 != nil {
		panic(err2)
	}

	message, err := http.ParseResponseMessage(decodeString)
	if err != nil {
		panic(err)
	}

	fmt.Println(message.GetStatusCode())

}
