//指定的当前proto语法的版本, 有2和3
syntax = "proto3";

option java_multiple_files = true;                    //等于true则将为每个消息类型生成单独的文件。
//option java_package = "GrpcHttpStandard";           //实例包名
option java_outer_classname = "GrpcHttpStandard";     //类名
option objc_class_prefix = "HLW";                     //生成前缀 未知用法
option go_package = "/GrpcHttpStandard";              //go 实例包名路径

//import "google/api/annotations.proto";


//包名 服务名称 用于http2路由
package GrpcHttpStandard;


// 下标的偏移量 用于在字节流中定位准确数据
message SubscriptOffsets{
  int64 startIndex = 1; // 开始下标
  int64 endIndex = 2;   // 结束下标
}


// 布尔值
message Boole{
  bool boole = 1;
}

// 状态,用于表示函数执行状态，服务或对象状态
message processingStatus{
  bool boole = 1;     // 布尔值
  string info = 3;    // 描述信息
}


//名称 String类型
message Str{
  string name = 1;
}

// 字节数据
message ByteData {
  bytes byteData = 1;
}


// 一组http请求 (请求和响应)
message httpReqAndRes {
  httpReqData req = 1;
  httpResData res = 2;
  httpInfo info = 3;
}

// http 单个请求 包含头部和体
message httpReqData {
  bytes Data = 1;                       //请求包完整报文
  string Url = 2;                       //请求url
  int64 BodyIndex = 3;                  //请求体开始下标,如若请求体下标与总长度一致就是没有请求体
  string httpVersion = 4;               // http版本
  httpReqService httpReqService = 5;    // 目标信息
}

// http 单个响应 包含头部和体
message httpResData {
  bytes Data = 1;    //请求包数据
  int32 StatusCode = 2 ; //状态码
  int64 BodyIndex = 3;   //请求体开始下标,如若请求体下标与总长度一致就是没有请求体
  string httpVersion = 5;
}


// http 请求主机的信息
message httpReqService{
  string ip = 1 ;
  int32  port = 2 ;
  bool  secure = 3;  // 是否使用https
}


// http信息
message httpInfo {
  int64 id = 1;      // id
  string info = 2;   // 简述信息
  bytes tmp = 3;     // 预留类型
}

